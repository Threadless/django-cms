//##################################################################################################################
// #CHANGEFORM#
/* global CMS, URLify, gettext */

(function ($) {
    'use strict';
    // CMS.$ will be passed for $
    $(document).ready(function () {

        // set local variables
        var title = $('#id_title');
        var slug = $('#id_slug');
        var changed = false;
        var prefill = false;

        // hide rows when hidden input fields are added
        $('input[type="hidden"]').each(function () {
            $(this).parent('.form-row').hide();
        });

        // determine if slug is empty
        if (slug.val() === '') {
            prefill = true;
        }

        // always bind the title > slug generation and do the validation inside for better ux
        title.bind('keyup', function () {
            var value = title.val();
            // international language handling
            if (window.UNIHANDECODER) {
                value = window.UNIHANDECODER.decode(value);
            }
            // if slug is empty, prefill again
            if (prefill === false && slug.val() === '') {
                prefill = true;
            }
            // urlify
            // jshint newcap: false
            var urlified = URLify(value, 64);
            // jshint newcap: true
            if (prefill) {
                slug.val(urlified);
            }
        });
        // autocall
        title.trigger('keyup');

        // set focus to title
        title.focus();

        // all permissions and page states loader
        $('div.loading').each(function () {
            $(this).load($(this).attr('rel'));
        });

        // add changed data bindings to elements
        slug.add(title).bind('change', function () {
            $(this).data('changed', true);
        });

        // public api for changing the language tabs
        // used in admin/cms/page/change_form.html
        CMS.API.changeLanguage = function (url) {
            // also make sure that we will display the confirm dialog
            // in case users switch tabs while editing plugins
            var answer = true;
            if (slug.length) {
                // check if the slug has the changed attribute
                if (slug.data('changed') || title.data('changed')) {
                    changed = true;
                }
            }

            if (changed) {
                var question = gettext('Are you sure you want to change tabs without saving the page first?');
                answer = confirm(question);
            }
            if (answer) {
                window.location.href = url;
            }
        };

    });
})(CMS.$);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNtcy5jaGFuZ2Vmb3JtLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImJ1bmRsZS5hZG1pbi5jaGFuZ2Vmb3JtLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG4vLyAjQ0hBTkdFRk9STSNcbi8qIGdsb2JhbCBDTVMsIFVSTGlmeSwgZ2V0dGV4dCAqL1xuXG4oZnVuY3Rpb24gKCQpIHtcbiAgICAndXNlIHN0cmljdCc7XG4gICAgLy8gQ01TLiQgd2lsbCBiZSBwYXNzZWQgZm9yICRcbiAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgLy8gc2V0IGxvY2FsIHZhcmlhYmxlc1xuICAgICAgICB2YXIgdGl0bGUgPSAkKCcjaWRfdGl0bGUnKTtcbiAgICAgICAgdmFyIHNsdWcgPSAkKCcjaWRfc2x1ZycpO1xuICAgICAgICB2YXIgY2hhbmdlZCA9IGZhbHNlO1xuICAgICAgICB2YXIgcHJlZmlsbCA9IGZhbHNlO1xuXG4gICAgICAgIC8vIGhpZGUgcm93cyB3aGVuIGhpZGRlbiBpbnB1dCBmaWVsZHMgYXJlIGFkZGVkXG4gICAgICAgICQoJ2lucHV0W3R5cGU9XCJoaWRkZW5cIl0nKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICQodGhpcykucGFyZW50KCcuZm9ybS1yb3cnKS5oaWRlKCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIGRldGVybWluZSBpZiBzbHVnIGlzIGVtcHR5XG4gICAgICAgIGlmIChzbHVnLnZhbCgpID09PSAnJykge1xuICAgICAgICAgICAgcHJlZmlsbCA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBhbHdheXMgYmluZCB0aGUgdGl0bGUgPiBzbHVnIGdlbmVyYXRpb24gYW5kIGRvIHRoZSB2YWxpZGF0aW9uIGluc2lkZSBmb3IgYmV0dGVyIHV4XG4gICAgICAgIHRpdGxlLmJpbmQoJ2tleXVwJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gdGl0bGUudmFsKCk7XG4gICAgICAgICAgICAvLyBpbnRlcm5hdGlvbmFsIGxhbmd1YWdlIGhhbmRsaW5nXG4gICAgICAgICAgICBpZiAod2luZG93LlVOSUhBTkRFQ09ERVIpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHdpbmRvdy5VTklIQU5ERUNPREVSLmRlY29kZSh2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBpZiBzbHVnIGlzIGVtcHR5LCBwcmVmaWxsIGFnYWluXG4gICAgICAgICAgICBpZiAocHJlZmlsbCA9PT0gZmFsc2UgJiYgc2x1Zy52YWwoKSA9PT0gJycpIHtcbiAgICAgICAgICAgICAgICBwcmVmaWxsID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIHVybGlmeVxuICAgICAgICAgICAgLy8ganNoaW50IG5ld2NhcDogZmFsc2VcbiAgICAgICAgICAgIHZhciB1cmxpZmllZCA9IFVSTGlmeSh2YWx1ZSwgNjQpO1xuICAgICAgICAgICAgLy8ganNoaW50IG5ld2NhcDogdHJ1ZVxuICAgICAgICAgICAgaWYgKHByZWZpbGwpIHtcbiAgICAgICAgICAgICAgICBzbHVnLnZhbCh1cmxpZmllZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBhdXRvY2FsbFxuICAgICAgICB0aXRsZS50cmlnZ2VyKCdrZXl1cCcpO1xuXG4gICAgICAgIC8vIHNldCBmb2N1cyB0byB0aXRsZVxuICAgICAgICB0aXRsZS5mb2N1cygpO1xuXG4gICAgICAgIC8vIGFsbCBwZXJtaXNzaW9ucyBhbmQgcGFnZSBzdGF0ZXMgbG9hZGVyXG4gICAgICAgICQoJ2Rpdi5sb2FkaW5nJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkKHRoaXMpLmxvYWQoJCh0aGlzKS5hdHRyKCdyZWwnKSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIGFkZCBjaGFuZ2VkIGRhdGEgYmluZGluZ3MgdG8gZWxlbWVudHNcbiAgICAgICAgc2x1Zy5hZGQodGl0bGUpLmJpbmQoJ2NoYW5nZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICQodGhpcykuZGF0YSgnY2hhbmdlZCcsIHRydWUpO1xuICAgICAgICB9KTtcblxuICAgICAgICAvLyBwdWJsaWMgYXBpIGZvciBjaGFuZ2luZyB0aGUgbGFuZ3VhZ2UgdGFic1xuICAgICAgICAvLyB1c2VkIGluIGFkbWluL2Ntcy9wYWdlL2NoYW5nZV9mb3JtLmh0bWxcbiAgICAgICAgQ01TLkFQSS5jaGFuZ2VMYW5ndWFnZSA9IGZ1bmN0aW9uICh1cmwpIHtcbiAgICAgICAgICAgIC8vIGFsc28gbWFrZSBzdXJlIHRoYXQgd2Ugd2lsbCBkaXNwbGF5IHRoZSBjb25maXJtIGRpYWxvZ1xuICAgICAgICAgICAgLy8gaW4gY2FzZSB1c2VycyBzd2l0Y2ggdGFicyB3aGlsZSBlZGl0aW5nIHBsdWdpbnNcbiAgICAgICAgICAgIHZhciBhbnN3ZXIgPSB0cnVlO1xuICAgICAgICAgICAgaWYgKHNsdWcubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgLy8gY2hlY2sgaWYgdGhlIHNsdWcgaGFzIHRoZSBjaGFuZ2VkIGF0dHJpYnV0ZVxuICAgICAgICAgICAgICAgIGlmIChzbHVnLmRhdGEoJ2NoYW5nZWQnKSB8fCB0aXRsZS5kYXRhKCdjaGFuZ2VkJykpIHtcbiAgICAgICAgICAgICAgICAgICAgY2hhbmdlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoY2hhbmdlZCkge1xuICAgICAgICAgICAgICAgIHZhciBxdWVzdGlvbiA9IGdldHRleHQoJ0FyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBjaGFuZ2UgdGFicyB3aXRob3V0IHNhdmluZyB0aGUgcGFnZSBmaXJzdD8nKTtcbiAgICAgICAgICAgICAgICBhbnN3ZXIgPSBjb25maXJtKHF1ZXN0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChhbnN3ZXIpIHtcbiAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHVybDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgIH0pO1xufSkoQ01TLiQpO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9