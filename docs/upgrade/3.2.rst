.. _upgrade-to-3.2:

#################
3.2 release notes
#################

django CMS 3.2 introduces touch-screen support, significant improvements to the structure-board,
and numerous other updates and fixes for the frontend. Behind the scenes, auto-reloading following
apphook configuration changes will make life simpler for all users.

.. warning:: Upgrading from previous versions

    3.2 introduces some changes that **require** action if you are upgrading
    from a previous version. Please read :ref:`upgrade-guide-3.2` for a step-by-step guide to the
    process of upgrading from 3.1 to 3.2.


*****************
What's new in 3.2
*****************

* new welcome page to help new users
* full touch-screen support at all sizes from small tablets to table-top devices
* enhanced and polished user interface
* much-needed improvements to the structure-board
* enhancements to components such as the pop-up plugin editor, sideframe and the toolbar
* significant speed improvements on loading, HTTP requests and file sizes
* new *Link/Button* look & feel
* restarts are no longer required when changing apphook configurations
* a new content wizard system, adaptable to arbitrary content types


******************************
Changes that require attention
******************************

Renaming cms_app, cms_toolbar, menu modules
===========================================

``cms_app.py``, ``cms_toolbar.py`` and ``menu.py`` have been renamed to
``cms_apps.py``, ``cms_toolbars.py`` and ``cms_menus.py`` for consistency.

Old names are still supported but deprecated; support will be removed in 3.4.


Action required
---------------

In your own applications that use these modules, rename ``cms_app.py`` to ``cms_apps.py``,
``cms_toolbar.py`` to ``cms_toolbar.py`` and ``menu.py`` to ``menus.py``.


New ApphookReloadMiddleware
===========================

Until now, changes to Apphooks have required a restart of the server in order to take effect. A new
middleware class makes this automatic.

The new middleware class, ``cms.middleware.utils.ApphookReloadMiddleware``, is optional. If used,
this should be placed very near the top of your ``MIDDLEWARE_CLASSES`` tuple in settings. This
middleware and other changes in the CMS for version 3.2 provide automatic reloading of URLs when
changes to an apphook are made.

.. note::

   This has been tested and works in many production environments and deployment configurations,
   but we haven't been able to test it with all possible set-ups. Please file an issue if you
   discover one where it fails.


Developer tools
===============

SASS-related changes
--------------------

We now use `LibSass <https://github.com/sass/libsass>`_ rather than Compass for building static
files (this only affects frontend developers *of* django CMS - contributors to it, not other users
or developers). We've also adopted `CSSComb <http://csscomb.com>`_.


*************************
Minor changes / Bug fixes
*************************

* Fix placeholder template tags ignoring the ``lang`` parameter


*****************************
Backward incompatible changes
*****************************

See the :ref:`Frontend code <contributing_frontend>` documentation.


Automated spelling checks for documentation
-------------------------------------------

Documentation is now checked for spelling. A ``make spelling`` command is available now when
working on documentation, and our `Travis Continuous Integration server
<https://travis-ci.org/divio/django-cms>`_ also runs these checks.

See the :ref:`spelling` section in the documentation.


Content wizards
===============

:doc:`/reference/wizards` can help simplify production of content, and can be created to handle
non-CMS content too.

* Fixing "placeholder template tags ignoring the ``lang`` parameter" may affect the behaviour of your
  templates as a previously ignored parameter is no longer ignored; if you used the ``lang``
  parameter for placeholder template tags you may be affected: check the behaviour after the upgrade.


.. _upgrade-guide-3.2:

*******************************
Upgrading django CMS 3.1 to 3.2
*******************************

Please note any changes that require action above, and take action accordingly.


.. todo:: upgrade steps

********************
Pending deprecations
********************

.. todo:: a note about which Python/Django versions are to be dropped
