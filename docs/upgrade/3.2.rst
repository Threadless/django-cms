.. _upgrade-to-3.2:

#################
3.2 release notes
#################

In this release we have tried to maintain maximum backwards-compatibility, particularly for
third-party applications, and endeavoured to identify and tidy loose ends in the system wherever
possible.

.. warning:: Upgrading from previous versions

    3.2 introduces some changes that **require** action if you are upgrading
    from a previous version. Please read :ref:`upgrade-guide-3.2` for a step-by-step guide to the
    process of upgrading from 3.1 to 3.2.

*****************
What's new in 3.2
*****************

Renaming cms_app, cms_toolbar, menu modules
===========================================

``cms_app.py``, ``cms_toolbar.py`` and ``menu.py`` have been renamed to
``cms_apps.py``, ``cms_toolbars.py`` and ``cms_menus.py`` for consistency.

Old names are still supported but deprecated; support will be removed in 3.4.

Action required
---------------

In your own applications that use these modules, rename ``cms_app.py`` to ``cms_apps.py``,
``cms_toolbar.py`` to ``cms_toolbar.py`` and ``menu.py`` to ``menus.py``.

New ApphookReloadMiddleware
===========================

A new, optional middleware is available:
``cms.middleware.utils.ApphookReloadMiddleware``. If used, this should be placed
very near the top of your ``MIDDLEWARE`` tuple in settings. This middleware and
other changes in the CMS for version 3.2 provides automatic reloading of URLs
when changes to an apphook are made. This is tested to work in many types of
production environments, but may not work in some others.

.. warning:: Change to signal name

    From version 3.2, the signal used to signal when URLs need to be reloaded
    has changed to ``cms_urls_need_reloading`` from ``urls_need_reloading`` in
    earlier versions.


*****************************
Backward incompatible changes
*****************************

* ``cms_app.py``, ``cms_toolbar.py`` and ``menu.py`` shipped in django CMS have been renamed
  according to the new naming convention. If you import those modules, you will need to amend
  your ``import`` statements appropriately.


.. _upgrade-guide-3.2:

*******************************
Upgrading django CMS 3.1 to 3.2
*******************************

